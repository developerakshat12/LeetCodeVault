export const topicVideos: Record<string, string> = {
    "Don't watch my A2Z DSA Course" : "0bHoB32fuj0",
    "How to setup VS code for DSA and CP | Input / Output split format" : "h3uDCJ5mvgw",
    "C++ Basics in One Shot - Strivers A2Z DSA Course - L1" : "EAR7De6Goz4",
    "Time and Space Complexity - Strivers A2Z DSA Course" : "FPu9Uld7W-E",
    "Solve any Pattern Question - Trick Explained | 22 Patterns in 1 Shot | Strivers A2Z DSA Course" : "tNm_NNSB3_w",
    "Complete C++ STL in 1 Video | Time Complexity and Notes" : "RRVYpIET_RU",
    "Basic Maths for DSA | Euclidean Algorithm | Strivers A2Z DSA Course" : "1xNbjMdbjug",
    "Re 1. Introduction to Recursion | Recursion Tree | Stack Space | Strivers A2Z DSA Course" : "yVdKa8dnKiE",
    "Re 2. Problems on Recursion | Strivers A2Z DSA Course" : "un6PLygfXrA",
    "Re 3. Parameterised and Functional Recursion | Strivers A2Z DSA Course" : "69ZCDFy-OUo",
    "Re 4. Problems on Functional Recursion | Strivers A2Z DSA Course" : "twuC1F6gLI8",
    "Re 5. Multiple Recursion Calls | Problems | Strivers A2Z DSA Course" : "kvRjNm4rVBE",
    "Hashing | Maps | Time Complexity | Collisions | Division Rule of Hashing | Strivers A2Z DSA Course" : "KEs5UyBJ39g",
    "Sorting - Part 1 | Selection Sort, Bubble Sort, Insertion Sort | Strivers A2Z DSA Course" : "HGk_ypEuS24",
    "Merge Sort | Algorithm | Pseudocode | Dry Run | Code | Strivers A2Z DSA Course" : "ogjf7ORKfd8",
    "Quick Sort For Beginners | Strivers A2Z DSA Course" : "WIrA4YexLRQ",
    "Find Second Largest Element in Array | Remove duplicates from Sorted Array | Arrays Intro Video" : "37E9ckMDdTk",
    "Rotate Array by K places | Union, Intersection of Sorted Arrays | Move Zeros to End | Arrays Part-2" : "wvcQg43_V8U",
    "Find element that appears once | Find missing number | Max Consecutive number of 1's | Arrays Part-3" : "bYWLJb3vCWY",
    "Longest Subarray with sum K | Brute - Better - Optimal | Generate Subarrays" : "frf7qxiN2qU",
    "2 Sum Problem | 2 types of the same problem for Interviews | Brute-Better-Optimal" : "UXDSeD9mN-k",
    "Sort an array of 0's 1's & 2's | Intuition of AlgoðŸ”¥ | C++ Java Python | Brute-Better-Optimal" : "tp8JIuCXBaU",
    "Majority Element I | Brute-Better-Optimal | Moore's Voting Algorithm | Intuition ðŸ”¥|Brute to Optimal" : "nP_ns3uSh80",
    "Kadane's Algorithm | Maximum Subarray Sum | Finding and Printing" : "AHZpyENo7k4",
    "DP 35. Best Time to Buy and Sell Stock | DP on Stocks ðŸ”¥" : "excAOvwF_Wk",
    "Rearrange Array Elements by Sign | 2 Varieties of same Problem" : "h4aBagy4Uok",
    "Next Permutation - Intuition in Detail ðŸ”¥ | Brute to Optimal" : "JDOXKqF60RQ",
    "Leaders in an Array | Brute - Optimal | Strivers A2Z DSA Course" : "cHrH9CQ8pmY",
    "Longest Consecutive Sequence | Google Interview Question | Brute Better Optimal" : "oO5uLE7EUlM",
    "Set Matrix Zeroes | O(1) Space Approach | Brute - Better - Optimal" : "N0MgLvceX7M",
    "Rotate Matrix/Image by 90 Degrees | Brute - Optimal" : "Z0R2u6gd3GU",
    "Spiral Traversal of a Matrix | Spiral Matrix" : "3Zv-s9UUrFM",
    "Count Subarray sum Equals K | Brute - Better -Optimal" : "xvNwoz-ufXA",
    "Pascal Triangle | Finding nCr in minimal time" : "bR7mQgwQ_o8",
    "Majority Element II | Brute-Better-Optimal" : "vwZj1K0e9U8",
    "3 Sum | Brute -  Better - Optimal with Codes" : "DhFh8Kw7ymk",
    "4 Sum | Brute - Better - Optimal with Codes" : "eD95WRfh81c",
    "Number of Subarrays with xor K | Brute - Better - Optimal" : "eZr-6p0B7ME",
    "Merge Overlapping Intervals | Brute, Optimal with Precise TC analysis" : "IexN60k62jo",
    "Merge Sorted Arrays Without Extra Space | 2 Optimal Solution" : "n7uwj04E0I4",
    "Find the Missing and Repeating Number | 4 Approaches ðŸ”¥" : "2D0D8HE6uak",
    "Count Inversions in an Array | Brute and Optimal" : "AseUmwVNaoY",
    "Reverse Pairs | Hard Interview Question" : "0e4bZaP3MDI",
    "Maximum Product Subarray - Best Intuitive Approach Discussed" : "hnswaLJvr6g",
    "BS-1. Binary Search Introduction | Real Life Example | Iterative | Recursive | Overflow Cases" : "MHf6awe89xw",
    "BS-2. Implement Lower Bound and Upper Bound | Search Insert Position | Floor and Ceil" : "6zhGS79oQ4k",
    "BS-3. First and Last Occurrences in Array | Count occurrences in Array" : "hjR1IYVx9lY",
    "BS-4. Search Element in Rotated Sorted Array - I" : "5qGrJbHhqFs",
    "BS-5. Search Element in Rotated Sorted Array II" : "w2G2W8l__pc",
    "BS-6. Minimum in Rotated Sorted Array" : "nhEMDKMB44g",
    "BS-7. Find out how many times array has been rotated" : "jtSiWTPLwd0",
    "BS-8. Single Element in Sorted Array" : "AZOmHuHadxQ",
    "BS-9. Find Peak Element" : "cXxmbemS6XM",
    "BS-10. Finding Sqrt of a number using Binary Search" : "Bsv3FPUX_BA",
    "BS-11. Find the Nth root of an Integer" : "rjEJeYCasHs",
    "BS-12. Koko Eating Bananas" : "qyfekrNni90",
    "BS-13. Minimum days to make M bouquets | Binary Search" : "TXAuxeYBTdg",
    "BS-14. Find the Smallest Divisor Given a Threshold | Binary Search" : "UvBKTVaG6U8",
    "BS-15. Capacity to Ship Packages within D Days" : "MG-Ac4TAvTY",
    "BS-16. Kth Missing Positive Number | Maths + Binary Search" : "uZ0N_hZpyps",
    "BS-17. Aggressive Cows | Binary Search Hard" : "R_Mfw4ew-Vo",
    "BS-18. Allocate Books or Book Allocation | Hard Binary Search" : "Z0hwjftStI4",
    "BS-19. Painter's Partition and Split Array - Largest Sum" : "thUd_WJn6wk",
    "BS-20. Minimise Maximum Distance between Gas Stations | 3 Approaches | Heap | Binary Search" : "kMSBvlZ-_HA",
    "BS-21: Median of two Sorted Arrays of Different Sizes | Brute and Better Approach" : "C2rRzz-JDk8",
    "BS-21. Median of two Sorted Arrays of Different Sizes | Binary Search Approach With Intuition" : "F9c7LpRZWVQ",
    "BS-22. K-th element of two sorted arrays | Binary Search Approach" : "D1oDwWCq50g",
    "BS-23. Row with maximum number of 1s | Binary Search on 2D Arrays" : "SCz-1TtYxDI",
    "BS-24. Search in a 2D Matrix - I | Binary Search of 2D" : "JXU4Akft7yk",
    "BS-25. Search in a 2D Matrix - II  |  Binary Search on 2D" : "9ZbB397jU4k",
    "BS-26. Find Peak Element-II | Binary Search" : "nGGp5XBzC4g",
    "BS-27. Median in a Row Wise Sorted Matrix" : "Q9wXgdxJq48",
    "L1. Introduction to Trees | Types of Trees" : "_ANrF3FJm7I" ,
    "L2. Binary Tree Representation in C++" : "ctCpP0RFDFc" ,
    "L3. Binary Tree Representation in Java" : "hyLyW7rP24I" ,
    "L4. Binary Tree Traversals in Binary Tree | BFS | DFS" : "jmy0LaGET1I" ,
    "L5. Preorder Traversal of Binary Tree | C++ | Java | Code Explanation" : "RlUu72JrOCQ" ,
    "L6. Inorder Traversal of Binary Tree | C++ | Java | Code Explanation" : "Z_NEgBgbRVI" ,
    "L7. Postorder Traversal of Binary Tree | C++ | Java | Code Explanation" : "COQOU6klsBg" ,
    "L8. Level Order Traversal of Binary Tree | BFS | C++ | Java" : "EoAsWbO7sqg" ,
    "L9. Iterative Preorder Traversal in Binary Tree | C++ | Java | Stack" : "Bfqd8BsPVuw" ,
    "L10. iterative Inorder Traversal in Binary Tree | C++ | Java | Stack" : "lxTGsVXjwvM" ,
    "L11. Iterative Postorder Traversal using 2 Stack | C++ | Java | Binary Tree" : "2YBhNLodD8Q" ,
    "L12. Iterative Postorder Traversal using 1 Stack | C++ | Java | Binary Trees" : "NzIGLLwZBS8" ,
    "L13. Preorder Inorder Postorder Traversals in One Traversal | C++ | Java | Stack | Binary Trees" : "ySp2epYvgTE" ,    
    "L14. Maximum Depth in Binary Tree | Height of Binary Tree | C++ | Java" : "eD3tmO66aBA" ,
    "L15. Check for Balanced Binary Tree | C++ | Java" : "Yt50Jfbd8Po" ,
    "L16. Diameter of Binary Tree | C++ | Java" : "Rezetez59Nk" ,
    "L17. Maximum Path Sum in Binary Tree | C++ | Java" : "WszrfSwMz58" ,
    "L18. Check it two trees are Identical or Not | C++ | Java" : "BhuvF_-PWS0" ,
    "L19. Zig-Zag or Spiral Traversal in Binary Tree | C++ | Java" : "3OXWEdlIGl4" ,
    "L20. Boundary Traversal in Binary Tree | C++ | Java" : "0ca1nvR0be4" ,
    "L21. Vertical Order Traversal of Binary Tree | C++ | Java" : "q_a6lpbKJdw" ,
    "L22. Top View of Binary Tree | C++ | Java" : "Et9OCDNvJ78" ,
    "L23. Bottom View of Binary Tree | C++ | Java" : "0FtVY6I4pB8" ,
    "L24. Right/Left View of Binary Tree | C++ | Java" : "KV4mRzTjlAk" ,
    "L25. Check for Symmetrical Binary Trees | C++ | Java" : "nKggNAiEpBE" ,
    "L26. Print Root to Node Path in Binary Tree | C++ | Java" : "fmflMqVOC7k" ,
    "L27. Lowest Common Ancestor in Binary Tree | LCA | C++ | Java" : "_-QHfMDde90" ,
    "L28. Maximum Width of Binary Tree | C++ | Java" : "ZbybYvcVLks" ,
    "L29. Children Sum Property in Binary Tree | O(N) Approach | C++ | Java" : "fnmisPM6cVo" ,
    "L30. Print all the Nodes at a distance of K in Binary Tree | C++ | Java" : "i9ORlEy6EsI" ,
    "L31. Minimum time taken to BURN the Binary Tree from a Node | C++ | Java" : "2r5wLmQfD6g" ,
    "L32. Count total Nodes in a COMPLETE Binary Tree | O(Log^2 N) Approach | C++ | Java" : "u-yWemKGWO0" ,
    "L33. Requirements needed to construct a Unique Binary Tree | Theory" : "9GMECGQgWrQ" ,
    "L34. Construct a Binary Tree from Preorder and Inorder Traversal | C++ | Java" : "aZNaLrVebKQ" ,
    "L35. Construct the Binary Tree from Postorder and Inorder Traversal | C++ | Java" : "LgLRTaEMRVc" ,
    "L36. Serialize and De-serialize Binary Tree | C++ | Java" : "-YbXySKJsX8" ,
    "L37. Morris Traversal | Preorder | Inorder | C++ | Java" : "80Zug6D1_r4" ,
    "L38. Flatten a Binary Tree to Linked List | 3 Approaches | C++ | Java" : "sWf7k1x9XR4" ,
    "L39. Introduction to Binary Search Tree | BST" : "p7-9UvDQZ3w" ,
    "L40. Search in a Binary Search Tree | BST | C++ | Java" : "KcNt6v_56cc" ,
    "L41. Ceil in a Binary Search Tree | BST | C++ | Java" : "KSsk8AhdOZA" ,
    "L42. Floor in a Binary Search Tree | BST | C++ | Java" : "xm_W1ub-K-w" ,
    "L43. Insert a given Node in Binary Search Tree | BST | C++ | Java" : "FiFiNvM29ps" ,
    "L44. Delete a Node in Binary Search Tree | BST | C++ | Java" : "kouxiP_H5WE" ,
    "L45. K-th Smallest/Largest Element in BST" : "9TJYWh0adfk" ,
    "L46. Check if a tree is a BST or BT | Validate a BST" : "f-sj7I5oXEI" ,
    "L47. LCA in Binary Search Tree" : "cX_kPV_foZc" ,
    "L48. Construct a BST from a preorder traversal | 3 Methods" : "UmJT3j26t1I" ,
    "L49. Inorder Successor/Predecessor in BST | 3 Methods" : "SXKAD2svfmI" ,
    "L50. Binary Search Tree Iterator | BST | O(H) Space" : "D2jMcmxU4bs" ,
    "L51. Two Sum In BST | Check if there exists a pair with Sum K" : "ssL3sHwPeb4" ,
    "L52. Recover BST | Correct BST with two nodes swapped" : "ZWGW7FminDM" ,
    "L53. Largest BST in Binary Tree" : "X0oXMdtUDwo" ,
    "G-1. Introduction to Graph | Types | Different Conventions Used" : "M3_pLsDdeuU" ,
    "G-2. Graph Representation in C++ | Two Ways to Represent" : "3oI-34aPMWM" ,
    "G-3. Graph Representation in Java | Two Ways to Represent" : "OsNklbh9gYI" ,
    "G-4. What are Connected Components ?" : "lea-Wl_uWXY" ,
    "G-5. Breadth-First Search (BFS) | C++ and Java | Traversal Technique in Graphs" : "-tgVpUgsQ5k" ,
    "G-6. Depth-First Search (DFS) | C++ and Java | Traversal Technique in Graphs" : "Qzf1a--rhp8" ,
    "G-7. Number of Provinces | C++ | Java | Connected Components" : "ACzkVtewUYA" ,
    "G-8. Number of Islands | Number of Connected Components in Matrix | C++ | Java" : "muncqlKJrH0" ,
    "G-9. Flood Fill Algorithm | C++ | Java" : "C-2_uSRli8o" ,
    "G-10. Rotten Oranges | C++ | Java" : "yf3oUhkvqA0" ,
    "G-11. Detect a Cycle in an Undirected Graph using BFS | C++ | Java" : "BPlrALf1LDU" ,
    "G-12. Detect a Cycle in an Undirected Graph using DFS | C++ | Java" : "zQ3zgFypzX4" ,
    "G-13. Distance of nearest cell having 1 | 0/1 Matrix | C++ | Java" : "edXdVwkYHF8" ,
    "G-14. Surrounded Regions | Replace O's with X's | C++ | Java" : "BtdgAys4yMk" ,
    "G-15. Number of Enclaves | Multi-source BFS | C++ | Java" : "rxKcepXQgU4" ,
    "G-16. Number of Distinct Islands | Constructive Thinking + DFS | C++ | Java" : "7zmgQSJghpo" ,
    "G-17. Bipartite Graph | BFS | C++ | Java" : "-vu34sct1g8" ,
    "G-18. Bipartite Graph | DFS | C++ | Java" : "KG5YFfR0j8A" ,
    "G-19. Detect cycle in a directed graph using DFS | Java | C++" : "9twcmtQj4DU" ,
    "G-20. Find Eventual Safe States - DFS" : "uRbJ1OF9aYM" ,
    "G-21. Topological Sort Algorithm | DFS" : "5lZ0iJMrUMk" ,
    "G-22. Kahn's Algorithm | Topological Sort Algorithm | BFS" : "73sneFXuTEg" ,
    "G-23. Detect a Cycle in Directed Graph | Topological Sort | Kahn's Algorithm | BFS" : "iTBaI90lpDQ" ,
    "G-24. Course Schedule I and II | Pre-requisite Tasks | Topological Sort" : "WAOfKpxYHR8" ,
    "G-25. Find Eventual Safe States - BFS - Topological Sort" : "2gtg3VsDGyc" ,
    "G-26. Alien Dictionary - Topological Sort" : "U3N_je7tWAs" ,
    "G-27. Shortest Path in Directed Acyclic Graph - Topological Sort" : "ZUFQfFaU-8U" ,
    "G-28. Shortest Path in Undirected Graph with Unit Weights" : "C4gxoTaI71U" ,
    "G-29. Word Ladder - I | Shortest Paths" : "tRPda0rcf8E" ,
    "G-30. Word Ladder - 2 | Shortest Paths" : "DREutrv2XD0" ,
    "G-31. Word Ladder - 2 | Optimised Approach for Leetcode" : "AD4SFl7tu7I" ,
    "G-32. Dijkstra's Algorithm - Using Priority Queue - C++ and Java - Part 1" : "V6H1qAeB-l4" ,
    "G-33. Dijkstra's Algorithm - Using Set - Part 2" : "PATgNiuTP20" ,
    "G-34. Dijkstra's Algorithm - Why PQ and not Q, Intuition, Time Complexity Derivation - Part 3" : "3dINsjyfooY" ,      
    "G-35. Print Shortest Path - Dijkstra's Algorithm" : "rp1SMw7HSO8" ,
    "G-36. Shortest Distance in a Binary Maze" : "U5Mw4eyUmw4" ,
    "G-37. Path With Minimum Effort" : "0ytpZyiZFhA" ,
    "G-38. Cheapest Flights Within K Stops" : "9XybHVqTHcQ" ,
    "G-39. Minimum Multiplications to Reach End" : "_BvEJ3VIDWw" ,
    "G-40. Number of Ways to Arrive at Destination" : "_-0mx0SmYxA" ,
    "G-41. Bellman Ford Algorithm" : "0vVofAhAYjc" ,
    "G-42. Floyd Warshall Algorithm" : "YbY8cVwWAvw" ,
    "G-43. Find the City With the Smallest Number of Neighbours at a Threshold Distance" : "PwMVNSJ5SLI" ,
    "G-44. Minimum Spanning Tree - Theory" : "ZSPjZuZWCME" ,
    "G-45. Prim's Algorithm - Minimum Spanning Tree - C++ and Java" : "mJcZjjKzeqk" ,
    "G-46. Disjoint Set | Union by Rank | Union by Size | Path Compression" : "aBxjDBC4M1U" ,
    "G-47. Kruskal's Algorithm - Minimum Spanning Tree - C++ and Java" : "DMnDM_sxVig" ,
    "G-48. Number of Provinces - Disjoint Set" : "ZGr5nX-Gi6Y" ,
    "G-49. Number of Operations to Make Network Connected - DSU" : "FYrl7iz9_ZU" ,
    "G-50. Accounts Merge - DSU" : "FMwpt_aQOGw" ,
    "G-51. Number of Islands - II - Online Queries - DSU" : "Rn6B-Q4SNyA" ,
    "G-52. Making a Large Island - DSU" : "lgiz0Oup6gM" ,
    "G-53. Most Stones Removed with Same Row or Column - DSU" : "OwMNX8SPavM" ,
    "G-54. Strongly Connected Components - Kosaraju's Algorithm" : "R6uoSjZ2imo" ,
    "G-55. Bridges in Graph - Using Tarjan's Algorithm of time in and low time" : "qrAub5z8FeA" ,
    "G-56. Articulation Point in Graph" : "j1QDfU21iZk" ,
    "DP 1. Introduction to Dynamic Programming | Memoization | Tabulation | Space Optimization Techniques" : "tyB0ztf0DNY" ,
    "DP 2. Climbing Stairs | Learn How to Write 1D Recurrence Relations" : "mLfjzJsN8us" ,
    "DP 3. Frog Jump | Dynamic Programming | Learn to write 1D DP" : "EgG3jsGoPvQ" ,
    "DP 4. Frog Jump with K Distance | Lecture 3 Follow Up Question" : "Kmh3rhyEtB8" ,
    "DP 5. Maximum Sum of Non-Adjacent Elements | House Robber | 1-D | DP on Subsequences" : "GrMBfJNk_NY" ,
    "DP 6. House Robber 2 | 1D DP | DP on Subsequences" : "3WaxQMELSkw" ,
    "DP 7. Ninja's Training | MUST WATCH for 2D CONCEPTS ðŸ”¥ | Vacation | Atcoder | 2D DP |" : "AE39gJYuRog" ,
    "DP 8. Grid Unique Paths | Learn Everything about DP on Grids | ALL TECHNIQUES ðŸ”¥" : "sdE0A2Oxofw" ,
    "DP 9. Unique Paths 2 | DP on Grid with Maze Obstacles" : "TmhpgXScLyY" ,
    "DP 10. Minimum Path Sum in Grid | Asked to me In Microsoft Internship Interview | DP on GRIDS" : "_rgTlyky1uQ" ,      
    "DP 11. Triangle | Fixed Starting Point and Variable Ending Point | DP on GRIDS" : "SrP-PiLSYC0" ,
    "DP 12. Minimum/Maximum Falling Path Sum | Variable Starting and Ending Points | DP on Grids" : "N_aJ5qQbYA0" ,        
    "DP 13. Cherry Pickup II | 3D DP Made Easy | DP On Grids" : "QGfn7JeXK54" ,
    "DP 14. Subset Sum Equals to Target | Identify DP on Subsequences and Ways to Solve them" : "fWX9xDmIzRI" ,
    "DP 15. Partition Equal Subset Sum | DP on Subsequences" : "7win3dcgo3k" ,
    "Dp 16. Partition A Set Into Two Subsets With Minimum Absolute Sum Difference | DP on Subsequences" : "GS_OqZb2CWc" ,  
    "DP 17. Counts Subsets with Sum K | Dp on Subsequences" : "ZHyb-A2Mte4" ,
    "DP 18. Count Partitions With Given Difference | Dp on Subsequences" : "zoilQD1kYSg" ,
    "DP 19. 0/1 Knapsack | Recursion to Single Array Space Optimised Approach | DP on Subsequences" : "GqOmJHQZivw" ,      
    "DP 20. Minimum Coins | DP on Subsequences | Infinite Supplies Pattern" : "myPeWb3Y68A" ,
    "DP 21. Target Sum | DP on Subsequences" : "b3GD8263-PQ" ,
    "DP 22. Coin Change 2 | Infinite Supply Problems  | DP on Subsequences" : "HgyouUi11zk" ,
    "DP 23. Unbounded Knapsack | 1-D Array Space Optimised Approach" : "OgvOZ6OrJoY" ,
    "DP 24. Rod Cutting Problem | 1D Array Space Optimised Approach" : "mO8XpGoJwuo" ,
    "Dp 25. Longest Common Subsequence | Top Down | Bottom-Up | Space Optimised | DP on Strings" : "NPZn9jBrX8U" ,
    "DP 26. Print Longest Common Subsequence | Dp on Strings" : "-zI4mrF2Pb4" ,
    "DP 27. Longest Common Substring | DP on Strings ðŸ”¥" : "_wP9mWNPL5w" ,
    "DP 28. Longest Palindromic Subsequence" : "6i_T5kkfv4A" ,
    "DP 29. Minimum Insertions to Make String Palindrome" : "xPBLEj41rFU" ,
    "DP 30. Minimum Insertions/Deletions to Convert String A to String B" : "yMnH0jrir0Q" ,
    "DP 31. Shortest Common Supersequence | DP on Strings" : "xElxAuBcvsU" ,
    "DP 32. Distinct Subsequences | 1D Array Optimisation Technique ðŸ”¥" : "nVG7eTiD2bY" ,
    "DP 33. Edit Distance | Recursive to 1D Array Optimised Solution ðŸ”¥" : "fJaKO8FbDdo" ,
    "DP 34. Wildcard Matching | Recursive to 1D Array Optimisation ðŸ”¥" : "ZmlQ3vgAOMo" ,
    "DP 36. Buy and Sell Stock - II | Recursion to Space Optimisation" : "nGJmxkUJQGs" ,
    "DP 37. Buy and Sell Stocks III | Recursion to Space Optimisation" : "-uQGzhYj8BQ" ,
    "DP 38. Buy and Stock Sell IV | Recursion to Space Optimisation" : "IV1dHbk5CDc" ,
    "DP 39. Buy and Sell Stocks With Cooldown | Recursion to Space Optimisation" : "IGIe46xw3YY" ,
    "DP 40. Buy and Sell Stocks With Transaction Fee | Recursion to Space Optimisation" : "k4eK-vEmnKg" ,
    "DP 41. Longest Increasing Subsequence | Memoization" : "ekcwMsSIzVc" ,
    "DP 42. Printing Longest Increasing Subsequence | Tabulation | Algorithm" : "IFfYfonAFGc" ,
    "DP 43. Longest Increasing Subsequence | Binary Search | Intuition" : "on2hvxBXJH4" ,
    "DP 44. Largest Divisible Subset | Longest Increasing Subsequence" : "gDuZwBW9VvM" ,
    "DP 45. Longest String Chain | Longest Increasing Subsequence | LIS" : "YY8iBaYcc4g" ,
    "DP 46. Longest Bitonic Subsequence | LIS" : "y4vN0WNdrlg" ,
    "DP 47. Number of Longest Increasing Subsequences" : "cKVl1TFdNXg" ,
    "DP 48. Matrix Chain Multiplication | MCM | Partition DP Starts ðŸ”¥" : "vRVfmbCFW7Y" ,
    "DP 49. Matrix Chain Multiplication | Bottom-Up | Tabulation" : "pDCXsbAw5Cg" ,
    "DP 50. Minimum Cost to Cut the Stick" : "xwomavsC86c" ,
    "DP 51. Burst Balloons | Partition DP | Interactive G-Meet Session Update" : "Yz4LlDSlkns" ,
    "DP 52. Evaluate Boolean Expression to True | Partition DP" : "MM7fXopgyjw" ,
    "DP 53. Palindrome Partitioning - II | Front Partition ðŸ”¥" : "_H8V5hJUGd0" ,
    "DP 54. Partition Array for Maximum Sum | Front Partition ðŸ”¥" : "PhWWJmaKfMc" ,
    "DP 55. Maximum Rectangle Area with all 1's | DP on Rectangles" : "tOylVCugy9k" ,
    "DP 56. Count Square Submatrices with All Ones | DP on Rectangles ðŸ”¥" : "auS1fynpnjo" ,
    "L1. Introduction to LinkedList | Traversal | Length | Search an Element" : "Nq7ok-OyEpg" ,
    "L2. Deletion and Insertion in LL | 8 Problems" : "VaECK03Dz-g" ,
    "L3. Introduction to Doubly LinkedList | Insertions and Deletions" : "0eKMU10uEDI" ,
    "L4. Reverse a DLL | Multiple Approaches" : "u3WUW2qe6ww" ,
    "L5. Add 2 numbers in LinkedList | Dummy Node Approach" : "XmRrGzR6udg" ,
    "L6. Odd Even Linked List | Multiple Approaches" : "qf6qp7GzD5Q" ,
    "L7. Sort a LinkedList of 0's, 1's and 2's | Multiple Approaches" : "gRII7LhdJWc" ,
    "L8. Remove Nth Node from the end of the LinkedList | Multiple Approaches" : "3kMKYQ2wNIU" ,
    "L9. Reverse a LinkedList | Iterative and Recursive" : "D2vI2DNJGd8" ,
    "L10. Check if a LinkedList is Palindrome or Not | Multiple Approaches" : "lRY_G-u_8jk" ,
    "L11. Add 1 to a number represented by LinkedList" : "aXQWhbvT3w0" ,
    "L12. Find the intersection point of Y LinkedList" : "0DYoPz2Tpt4" ,
    "L13. Find the middle element of the LinkedList | Multiple Approaches" : "7LjQ57RqgEc" ,
    "L14. Detect a loop or cycle in LinkedList | With proof and Intuition" : "wiOo4DC5GGA" ,
    "L15. Find the length of the Loop in LinkedList" : "I4g1qbkTPus" ,
    "L16. Delete the middle node of the LinkedList" : "ePpV-_pfOeI" ,
    "L17. Find the starting point of the Loop/Cycle in LinkedList | Multiple Approaches" : "2Kd0KKmmHFc" ,
    "L18. Delete all occurrences of a Key in DLL" : "Mh0NH_SD92k" ,
    "L19. Find all Pairs with given Sum in DLL" : "YitR4dQsddE" ,
    "L20. Remove duplicates from sorted DLL" : "YJKVTnOJXSY" ,
    "L21. Reverse Nodes in K Group Size of LinkedList" : "lIar1skcQYI" ,
    "L22. Rotate a LinkedList" : "uT7YI7XbTY8" ,
    "L23. Merge two sorted Linked Lists" : "jXu-H7XuClE" ,
    "L24. Flattening a LinkedList | Multiple Approaches with Dry Run" : "ykelywHJWLg" ,
    "L25. Merge K Sorted Lists | Multiple Approaches" : "1zktEppsdig" ,
    "L26. Sort a Linked List | Merge Sort and Brute Force" : "8ocB7a_c-Cc" ,
    "L27. Clone a LinkedList with Next and Random Pointers | Copy List with Random Pointers" : "q570bKdrnlw" ,
    "L28. Design a Browser History | LinkedList Implementation" : "mG3KLugbOdc" ,
    "L2. Print all Divisors of a Number | Maths Playlist" : "Ae_Ag_saG9s" ,
    "L3. Check if a Number if Prime or not | Maths Playlist" : "MJcckSfoYdI" ,
    "L4. Print all prime factors of a Number | Maths Playlist" : "LT7XhVdeRyg" ,
    "L5. Power Exponentiation | Maths Playlist" : "hFWckDXE-K8" ,
    "L6. Sieve of Eratosthenes | Maths Playlist" : "g5Fuxn_AvSk" ,
    "L7. Count Prime in a range L-R | Maths Playlist" : "os82DjD2-MA" ,
    "L8. Smallest Prime Factor (SPF) | Prime Factorisation | Query Based Problem | Maths Playlist" : "glKWkmKFlMw" ,       
    "L1. Introduction to Sliding Window and 2 Pointers | Templates | Patterns" : "9kdHxplyl5I" ,
    "L2. Maximum Points You Can Obtain from Cards | 2 Pointers and Sliding Window Playlist" : "pBWCOCS636U" ,
    "L3. Longest Substring Without Repeating Characters | 2 Pointers and Sliding Window Playlist" : "-zSxTJkcdAo" ,        
    "L4. Max Consecutive Ones III | 2 Pointers and Sliding Window Playlist" : "3E4JBHSLpYk" ,
    "L5. Fruit Into Baskets | 2 Pointers and Sliding Window Playlist" : "e3bs0uA1NhQ" ,
    "L6. Longest Substring With At Most K Distinct Characters | 2 Pointers and Sliding Window Playlist" : "teM9ZsVRQyc" ,  
    "L7. Number of Substrings Containing All Three Characters | 2 Pointers and Sliding Window Playlist" : "xtqN4qlgr8s" ,  
    "L8. Longest Repeating Character Replacement | 2 Pointers and Sliding Window Playlist" : "_eNhaDCr6P0" ,
    "L9. Binary Subarrays With Sum | 2 Pointers and Sliding Window Playlist" : "XnMdNUkX6VM" ,
    "L10. Count number of Nice subarrays | 2 Pointers and Sliding Window Playlist" : "j_QOv9OT9Og" ,
    "L11. Subarray with k different integers | 2 Pointers and Sliding Window Playlist" : "7wYGbV_LsX4" ,
    "L12. Minimum Window Substring | 2 Pointers and Sliding Window Playlist" : "WJaij9ffOIY" ,
    "L1. Assign Cookies | Greedy Algorithm Playlist" : "DIX2p7vb9co" ,
    "L3. Shortest Job First (or SJF) CPU Scheduling" : "3-QbX1iDbXs" ,
    "L2. Lemonade Change | Greedy Algorithm Playlist" : "n_tmibEhO6Q" ,
    "L4. Jump Game - I | Greedy Algorithm Playlist" : "tZAa_jJ3SwQ" ,
    "L5. Jump Game - II | Greedy Algorithm Playlist" : "7SBVnw7GSTk" ,
    "L6. Job Sequencing Problem | Greedy Algorithm Playlist" : "QbwltemZbRg" ,
    "L7. N Meeting in One Room | Greedy Algorithms Playlist" : "mKfhTotEguk" ,
    "L8. Non Overlapping Intervals | Greedy Algorithms Playlist" : "HDHQ8lAWakY" ,
    "L9. Insert Intervals | Greedy Algorithms Playlist" : "xxRE-46OCC8" ,
    "L10. Minimum number of platforms required in a railway station" : "AsGzwR_FWok" ,
    "L11. Valid Parenthesis String | Multiple Approaches" : "cHT6sG_hUZI" ,
    "L13. Fractional Knapsack Algorithm" : "1ibsQrnuEEg" ,
    "L12. Candy | Slope Approach Intuition Based" : "IIqVFvKE6RY" ,
    "L1. Introduction to Stack and Queue | Implementation using Data Structures" : "tqQ5fTamIN4" ,
    "L2. Check for Balanced Parentheses | Stack and Queue" : "xwjS0iZhw4I" ,
    "L3. Prefix, Infix, and Postfix Conversion | Stack and Queue Playlist" : "4pIc9UBHJtk" ,
    "L4. Implement Min Stack | Stack and Queue Playlist" : "NdDIaH91P0g" ,
    "L5. Next Greater Element | Stack and Queue Playlist" : "e7XQLtOQM3I" ,
    "L6. Next Greater Element - II | Stack and Queue Playlist" : "7PrncD7v9YQ" ,
    "L7. Previous Smaller Element | Stack and Queue Playlist" : "zMdbdGJNlh4" ,
    "L8. Trapping Rainwater | 2 Approaches | Stack and Queue Playlist" : "1_5VuquLbXg" ,
    "L9. Sum of Subarray Minimum | Stack and Queue Playlist" : "v0e8p9JCgRc" ,
    "L10. Sum of subarray ranges | Stack and Queue Playlist" : "gIrMptNPf5M" ,
    "L11. Aestroid Collisions | Stack and Queue Playlist" : "_eYGqw_VDR4" ,
    "L12. Largest Rectangle in Histogram | Stack and Queue Playlist" : "Bzat9vgD0fs" ,
    "L13. Maximal Rectangle | Stack and Queue Playlist" : "ttVu6G7Ayik" ,
    "L14. Remove K Digits | Stack and Queue Playlist" : "jmbuRzYPGrg" ,
    "L15. Stock Span Problem | Stack and Queue Playlist" : "eay-zoSRkVc" ,
    "L16. Sliding Window Maximum | Stack and Queue Playlist" : "NwBvene4Imo" ,
    "L17. The Celebrity Problem | Stack and Queue Playlist" : "cEadsbTeze4" ,
    "L18. Implement LRU Cache" : "z9bJUPxzFOw" ,
    "Implement LFU cache in C++/Java  | Leetcode(Hard)" : "mzqHlAW7jeE" ,
    "Major Announcement | TUF+ V2 and System Design Playlist ðŸ”¥": "M4IHWsk-EAM",
};
